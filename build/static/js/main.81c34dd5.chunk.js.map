{"version":3,"sources":["redux/actions/actions.js","redux/actions/actionTypes.js","Body/PageContainer/Header/Header.js","Body/Loader/Loader.js","Body/PageContainer/TabItem/TabItem.js","Body/PageContainer/PageContainer.js","Body/Pageheader/Pageheader.js","Body/Footer/Footer.js","Body/Body.js","App.js","serviceWorker.js","redux/reducers/tabItem.js","redux/reducers/appReducer.js","redux/rootReducer.js","index.js"],"names":["fetchData","link","dispatch","a","type","payload","fetch","replace","response","json","changePath","path","connect","state","loading","appReducer","data","tabItem","onFetch","onChangePath","props","className","to","onClick","Loader","role","TabItem","this","history","push","dataKeys","Object","keys","includes","items","map","element","index","urlSlice","length","String","toLowerCase","searchValue","Array","isArray","slice","key","id","itemsMap","Map","item","title","name","itemsMapSorted","entries","sort","from","url","Component","results","exact","component","Pageheader","onChange","e","onChangeSearchValue","target","value","placeholder","changeSearchValue","Body","loaded","App","Boolean","window","location","hostname","match","initialState","combineReducers","action","toState","createBrowserHistory","store","createStore","rootReducer","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81c34dd5.chunk.js","sourcesContent":["import {FETCH_DATA,\n        SHOW_LOADER,\n        HIDE_LOADER,\n        CHANGE_PATH,\n        CHANGE_SEARCH_VALUE} from './actionTypes'\n\nexport function fetchData(link){\n  return async dispatch => {\n    await dispatch(showLoader())\n    const response = await fetch(link.replace(/http:/g, \"https:\"))\n    let json = await response.json();\n    await dispatch({type: FETCH_DATA, payload: json});\n    await dispatch(hideLoader())\n  }\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n    payload: true\n  }\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n    payload: false\n  }\n}\n\nexport function changePath(path) {\n  return {\n    type: CHANGE_PATH,\n    payload: path\n  }\n}\n\nexport function changeSearchValue(value) {\n  return {\n    type: CHANGE_SEARCH_VALUE,\n    payload: value\n  }\n}","export const FETCH_DATA = 'FETCH_DATA'\nexport const SHOW_LOADER = 'SHOW_LOADER'\nexport const HIDE_LOADER = 'HIDE_LOADER'\nexport const CHANGE_PATH = 'CHANGE_PATH'\nexport const CHANGE_SEARCH_VALUE = 'CHANGE_SEARCH_VALUE'","import React from 'react';\nimport './Header.sass'\nimport {connect} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport {fetchData,changePath} from '../../../redux/actions/actions';\n\nfunction Header (props) {\n  return (\n    <div className=\"header\">\n      <div className=\"tabs\">\n        <NavLink to=\"/films/\" onClick={()=>{props.onChangePath(\"/films/\")}}>Films</NavLink>\n        <NavLink to=\"/people/\" onClick={()=>{props.onChangePath(\"/people/\")}}>People</NavLink>\n        <NavLink to=\"/planets/\" onClick={()=>{props.onChangePath(\"/planets/\")}}>Planets</NavLink>\n        <NavLink to=\"/species/\" onClick={()=>{props.onChangePath(\"/species/\")}}>Species</NavLink>\n        <NavLink to=\"/starships/\" onClick={()=>{props.onChangePath(\"/starships/\")}}>Starships</NavLink>\n        <NavLink to=\"/vehicles/\" onClick={()=>{props.onChangePath(\"/vehicles/\")}}>Vehicles</NavLink>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.appReducer.loading,\n    data: state.tabItem.data\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onFetch: link => dispatch(fetchData(link)),\n    onChangePath: (path) => dispatch(changePath(path))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\n\nexport const Loader = () => (\n  <div className=\"spinner-border text-light\" role=\"status\">\n    <span className=\"sr-only\"></span>\n  </div>\n)","import React, {Component} from 'react';\nimport './TabItem.sass'\nimport {connect} from 'react-redux'\nimport {fetchData, changePath} from '../../../redux/actions/actions';\nimport {Loader} from '../../Loader/Loader'\n\nexport class TabItem extends Component {\n  \n  componentWillMount() {\n    if(this.props.path){\n      this.props.onFetch(`https://swapi.dev/api${this.props.path}`)\n    }else {\n      this.props.history.push('/')\n    }\n  }\n  \n  render(){\n    if (this.props.loading){\n      return <div className=\"centeredSpinner\"><Loader /></div>\n    } else if (this.props.data){\n      let dataKeys = Object.keys(this.props.data)\n      if (!dataKeys.includes('name') && !dataKeys.includes('title')){\n        const items = this.props.data\n        let itemsMap\n        if (Object.keys(items[0]).includes('title')){\n          itemsMap = new Map(items.map((item, index) => [item.title, item]));\n        } else{\n          itemsMap = new Map(items.map((item, index) => [item.name, item]));\n        }\n        const itemsMapSorted = new Map([...itemsMap.entries()].sort());\n        return (\n          <div className=\"tabItems\">\n            <div className=\"tabItems__Container\">\n              {Array.from(itemsMapSorted).map((element, index) => {\n                const urlSlice = element[1].url.slice(20,-1)\n                if (element[0].toLowerCase().includes(this.props.searchValue.toLowerCase())){\n                  return(\n                    <div className=\"linkItem\" key={index}>\n                      <a key={index} id = {\"name\"+index} onClick={()=>{\n                        this.props.onChangePath(urlSlice)\n                        this.props.onFetch(`http://swapi.dev/api${urlSlice}/`)\n                      }}>{element[0]}</a>\n                    </div>\n                  )\n                }\n              })}\n            </div>\n          </div>\n        )}else{\n          const items = this.props.data\n          return(\n            <div className=\"tabItems\">\n              <div className=\"tabItems__Container\">\n                {dataKeys.map((element, index) => {\n                  let urlSlice = '/'\n                  if (items[element] !== null && items[element] !== \"n/a\"&& items[element].length !==0 && element !== \"url\" && element !== \"created\" && element !== \"edited\"){\n                    if (String(element).toLowerCase().includes(this.props.searchValue.toLowerCase()) || String(items[element]).toLowerCase().includes(this.props.searchValue.toLowerCase())){\n                      if (String(items[element]).includes('http://') && !Array.isArray(items[element])){\n                        urlSlice = items[element].slice(20,-1)\n                        return(\n                          <div className=\"linkItem\" key={index}>\n                            <p>{element.replace(/[\\_]/g, \" \")}: </p>\n                            <div className=\"linkItem__links\">\n                              <a key={index} id = {\"link\"+index} onClick={()=>{\n                                this.props.onChangePath(urlSlice)\n                                this.props.onFetch(`http://swapi.dev/api${urlSlice}`)\n                              }}>Go to see #{items[element].slice(-3).replace(/[\\\"\"s/\"]/g, \"\")}</a>\n                            </div>\n                          </div>\n                        )\n                      }else if(Array.isArray(items[element])){\n                        return(\n                          <div className=\"linkItem linkItem_array\" key={index}>\n                            <p>{element.replace(/[\\_]/g, \" \")}: </p>\n                            <div className=\"linkItem__links\">\n                              {items[element].map((link, index) => {\n                                return(\n                                  <a key={index} id = {\"arrayLink\"+index} onClick={()=>{\n                                    this.props.onChangePath(link.slice(20,-1))\n                                    this.props.onFetch(`http://swapi.dev/api${link.slice(20,-1)+\"/\"}`)\n                                  }}>Go to see #{link.slice(-3).replace(/[\\\"\"s/\"]/g, \"\")}</a>\n                                )\n                              })}\n                            </div>\n                          </div>\n                        )\n                      }\n                      else{\n                        if (element == \"opening_crawl\") {\n                          return(\n                            <div className=\"linkItem\" key={index}>\n                              <p>{element.replace(/[\\_]/g, \" \")}: </p> <p className=\"linkItem__text\">{items[element]}</p>\n                            </div>\n                          ) \n                        }else {\n                          return(\n                            <div className=\"linkItem\" key={index}>\n                              <p>{element.replace(/[\\_]/g, \" \")}: </p> <p>{items[element]}</p>\n                            </div>\n                          )\n                        }\n                      }\n                    }\n                  }\n                })}\n              </div>\n            </div>\n          )\n        }\n      }\n      else {\n        return <div></div>\n      }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.appReducer.loading,\n    data: state.tabItem.data.results,\n    path: state.tabItem.path,\n    searchValue: state.tabItem.searchValue,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onFetch: link => dispatch(fetchData(link)),\n    onChangePath: (path) => dispatch(changePath(path))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabItem)\n","import React from 'react';\nimport './PageContainer.sass'\nimport Header from './Header/Header'\nimport TabItem from './TabItem/TabItem'\nimport {Route} from 'react-router-dom'\n\nexport default (props) => (\n  <div className=\"bodyContainer\">\n    <Header />\n    <Route exact path=\"/\"/>\n    <Route path=\"/films\" component={TabItem}/>\n    <Route path=\"/people\" component={TabItem}/>\n    <Route path=\"/planets\" component={TabItem}/>\n    <Route path=\"/species\" component={TabItem}/>\n    <Route path=\"/starships\" component={TabItem}/>\n    <Route path=\"/vehicles\" component={TabItem}/>\n  </div>\n)\n","import './Pageheader.sass'\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport { changeSearchValue } from '../../redux/actions/actions';\n\nexport class Pageheader extends Component {\n\n  render(){\n    return(\n      <header>\n        <span>Montakarlo_app</span>\n        <div className='searchContainer'>\n          <input\n            type=\"text\"\n            id=\"input_password\"\n            name=\"password\"\n            onChange={(e)=> {\n              this.props.onChangeSearchValue(e.target.value)\n            }}\n            placeholder=\"Search...\"\n            >\n          </input>\n        </div>\n      </header>\n  )}\n}\nfunction mapStateToProps(state) {\n  return {\n    searchValue: state.tabItem.searchValue,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChangeSearchValue: value => dispatch(changeSearchValue(value)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pageheader)\n  ","import React from 'react';\nimport './Footer.sass'\n\nexport default () => (\n  <span className =\"footer\">The Star Wars API</span>\n)","import React, {Component} from 'react';\nimport './Body.sass'\nimport PageContainer from './PageContainer/PageContainer'\nimport Pageheader from './Pageheader/Pageheader'\nimport Footer from './Footer/Footer'\nimport {connect} from 'react-redux'\n\n\nexport class Body extends Component {\n\n  render(){\n    return(\n      <div className = \"container\">\n        <Pageheader />\n        <PageContainer />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loaded: state.loaded\n  }\n}\n\nexport default connect(mapStateToProps, null)(Body)","import React from 'react';\nimport Body from './Body/Body'\nimport './App.sass'\n\nfunction App() {\n  return (\n      <div className=\"pageContainer\">\n        <Body />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {FETCH_DATA, CHANGE_PATH, CHANGE_SEARCH_VALUE} from '../actions/actionTypes';\n\nconst initialState = {\n  data: [],\n  // path: '/'\n  searchValue: ''\n}\n\n\nexport default function tabItem (state = initialState, action) {\n\n  switch(action.type) {\n    case FETCH_DATA:\n      let toState = []\n      if (action.payload.results){\n        toState = action.payload\n      } else{\n        toState = {results: action.payload}\n      }\n      return {\n        ...state, data: toState\n      }\n    case CHANGE_PATH:\n      return {\n        ...state, path: action.payload\n      }\n    case CHANGE_SEARCH_VALUE:\n      return {\n        ...state, searchValue: action.payload\n      }\n    default:\n      return state\n  }\n}","import {SHOW_LOADER,HIDE_LOADER} from '../actions/actionTypes';\n\nconst initialState = {\n  loading: false\n}\n\nexport default function appReducer (state = initialState, action) {\n\n  switch(action.type) {\n    case SHOW_LOADER:\n      return {\n        loading: action.payload\n      }\n    case HIDE_LOADER:\n      return {\n        loading: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport tabItem from './reducers/tabItem'\nimport appReducer from './reducers/appReducer'\n\nexport default combineReducers({\n  tabItem, appReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport reduxThunk from 'redux-thunk'\nimport rootReducer from './redux/rootReducer'\nimport {Router} from 'react-router-dom'\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nconst store = createStore(rootReducer,\n  applyMiddleware(\n  reduxThunk\n))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}